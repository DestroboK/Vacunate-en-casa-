@page "/form"
@inject IJSRuntime JsRuntime
@inject ISolicitudService SolicitudService  
@inject HttpClient Http


<h3>Registrar</h3>

<EditForm Model="@nuevoForm" OnValidSubmit="CreateNewSolicitud">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="cedula">Cedula</label>
        <InputText id="cedula" @bind-Value="nuevoForm.cedula" class="form-control" />
        <ValidationMessage For="@(() => nuevoForm.cedula)" />
    </div>

    <div class="form-group">
        <label for="nombre">Nombre</label>
        <InputText id="nombre" @bind-Value="nuevoForm.nombre" class="form-control" />
        <ValidationMessage For="@(() => nuevoForm.nombre)" />
    </div>

    <div class="form-group">
        <label for="apellido">Apellido</label>
        <InputText id="apellido" @bind-Value="nuevoForm.apellido" class="form-control" />
    </div>

    <div class="form-group">
        <label for="telefono">Telefono</label>
        <InputText id="telefono" @bind-Value="nuevoForm.telefono" class="form-control" />
    </div>

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="nuevoForm.email" class="form-control" />
    </div>

    <div class="form-group">
        <label for="tipo_sangre">Fecha de nacimiento</label>
        <InputDate id="tipo_sangre" @bind-Value="nuevoForm.FechaNac" class="form-control" />
    </div>

    <div class="form-group">
        <label for="tipo_sangre">Tipo de sangre</label>
        <InputText id="tipo_sangre" @bind-Value="nuevoForm.tipo_sangre" class="form-control" />
    </div>

    <div class="form-group">
        <label for="provinia">Provinvia</label>
        <InputText id="provincia" @bind-Value="nuevoForm.provincia" class="form-control" />
    </div>

    <div class="form-group">
        <label for="direccion">Direccion</label>
        <InputText id="direccion" @bind-Value="nuevoForm.direccion" class="form-control" />
    </div>
    <div class="form-group">
        <label for="covid">¿Has tenido Covid?</label>
        <InputCheckbox id="covid" @bind-Value="nuevoForm.covid" class="form-control" />
    </div>
    <div class="form-group">
        <label for="covid">Latitud</label>
        <InputNumber id="covid" @bind-Value="nuevoForm.latitud" class="form-control" />
    </div>
    <div class="form-group">
        <label for="covid">Latitud</label>
        <InputNumber id="covid" @bind-Value="nuevoForm.longitud" class="form-control" />
    </div>
    <div class="form-group">
        <label for="justificacion">Justificacion</label>
        <InputText id="justificacion" @bind-Value="nuevoForm.justificacion" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Crear</button>
    <h4>@advertencia</h4>
    <ValidationSummary />
</EditForm>

@if (solicitudes.Count == 0)
{
    <span>Cargando solicitudes</span>
}

else
{
    <p>Hay @solicitudes.Count solicitudes mandadas.</p>
}

@code {
    Tarea9_Form_Vacunate.Shared.Solicitud nuevoForm = new Tarea9_Form_Vacunate.Shared.Solicitud();

    List<Solicitud> solicitudes = new List<Solicitud>();

    string advertencia;

    protected override async Task OnInitializedAsync() {

        solicitudes = await SolicitudService.GetSolicitudes();
    }


    async void CreateNewSolicitud()
    {
        foreach(Solicitud soli in solicitudes)
        {
            if(soli.cedula == nuevoForm.cedula && soli.nombre == nuevoForm.nombre && soli.email == nuevoForm.email && soli.apellido == nuevoForm.apellido)
            {
                advertencia = "Usted ya ha llenado este formulario.";
            }
            else {
                await SolicitudService.CrearSolicitud(nuevoForm);
                SendLocalEmail(nuevoForm.email, "Resumen de datos", "<h3>" + "Nombre: " + nuevoForm.nombre + ", Apellido: " + nuevoForm.apellido + ", Direccion: " + nuevoForm.direccion + ",Telefono: " + nuevoForm.telefono + ", Cedula: " + nuevoForm.cedula + ", Fecha de nacimiento: " + nuevoForm.FechaNac.ToShortDateString() + ", Latitud: " + nuevoForm.latitud + ", Longitud: " + nuevoForm.longitud + ", Tipo de sangre: " + nuevoForm.tipo_sangre + ", Provincia: " + nuevoForm.provincia + ", Direccion: " + nuevoForm.direccion + ", Justificacion: " + nuevoForm.justificacion + "</h3>");
                Console.WriteLine("Formulario envidado correctamente");
            }
        }

    }
    protected void SendLocalEmail(string toEmailAddress, string subject, string body)
    {
        JsRuntime.InvokeAsync<object>("blazorExtensions.SendLocalEmail",
        new object[] { toEmailAddress, subject, body });
    }

}

